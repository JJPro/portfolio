# TODO: 
# 1. expose port in `nginx` container, OR add `nginx` to network of another reverse proxy server (e.g. NPM)
# 2. Initial setup via the browser
# 3. execute command to install Recommended plugins (Edit the file to your needs):
#     - `docker exec wordpress /var/www/post-install.sh`

---
version: '3'

services:
  portfolio-wordpress:
    image: jjpro/wordpress-fpm:prod
    restart: unless-stopped
    volumes:
      - wordpress_data:/var/www/html
      - ./scripts/post-install.prod.sh:/var/www/post-install.sh
    depends_on:
      - portfolio-mariadb
    environment:
      ### Common
      - WORDPRESS_DB_HOST=portfolio-mariadb
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
    networks:
      - default

  portfolio-mariadb:
    image: bitnami/mariadb:10.6
    restart: unless-stopped
    environment:
      - MARIADB_PASSWORD=wordpress
      - MARIADB_USER=wordpress
      - MARIADB_DATABASE=wordpress
      - MARIADB_ROOT_PASSWORD=pass
    volumes:
      - db:/bitnami/mariadb
    networks:
      - default

  portfolio-nginx:
    image: nginx
    container_name: portfolio
    restart: unless-stopped
    # TODO Uncomment if you want to expose nginx directly, some folks, like me, would prefer attaching to NPM (Nginx Proxy Manager)'s network, and let NPM manage the proxy
    # ports: 
    #   - 8080:80
    networks:
      - default
      - npm_br
    volumes:
      - wordpress_data:/var/www/html
      - ./conf/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  portfolio-theme: 
    image: jjpro/portfolio-theme
    restart: on-failure
    depends_on: 
      - portfolio-wordpress
      - portfolio-nginx
    volumes:
      - wordpress_data:/var/www/html


volumes:
  db:
  wordpress_data:

networks:
  default: 
  npm_br: 
    external: true